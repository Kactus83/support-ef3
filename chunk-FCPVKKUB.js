import{Fa as r,Ga as s,Gb as S,Ha as M,Ia as x,Ja as h,La as v,Mb as y,Na as _,Oa as d,S as m,Wa as a,Xa as D,Ya as T,Z as g,_ as f,_a as b,bb as k,fa as I,ha as c,nb as F,ob as L,pb as j,pc as R,qc as O,rc as E,tb as C,tc as w,ua as u,uc as P,wa as p,xa as q}from"./chunk-KGMYD4OE.js";var z=(()=>{let t=class t{};t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=m({type:t,selectors:[["app-qualite-architecture"]],standalone:!0,features:[b],decls:31,vars:0,consts:[[1,"flex","min-w-0","flex-auto","flex-col"],[1,"bg-card","flex","flex-col","border-b","p-6","sm:flex-row","sm:items-center","sm:justify-between","sm:px-10","sm:py-8"],[1,"flex-1"],[1,"flex","items-center","font-medium","text-gray-500","text-sm"],[1,"mr-2"],[1,"mt-2","text-3xl","font-extrabold","leading-tight"],[1,"flex-auto","p-6","sm:p-10"],[1,"max-w-3xl","mx-auto","prose","prose-sm"],[1,"flex","flex-wrap","gap-4","mt-4"],["mat-flat-button","","color","primary","routerLink","solid",1,"fuse-mat-button-large"],["mat-flat-button","","color","primary","routerLink","design-patterns",1,"fuse-mat-button-large"]],template:function(o,l){o&1&&(r(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"mat-icon",4),a(5,"build"),s(),a(6," Qualit\xE9 de Code & Architecture "),s(),r(7,"h2",5),a(8," Contexte & Bonnes Pratiques "),s()()(),r(9,"div",6)(10,"div",7)(11,"h3"),a(12,"Pourquoi la Qualit\xE9 de Code ?"),s(),r(13,"p"),a(14," Mes premiers projets devenaient rapidement difficiles \xE0 maintenir : classes multit\xE2ches, tests inexistants et refontes r\xE9p\xE9t\xE9es. J\u2019ai compris qu\u2019un bon design n\u2019\xE9tait pas un luxe, mais une n\xE9cessit\xE9 pour gagner en productivit\xE9 et fiabilit\xE9. "),s(),r(15,"h3"),a(16,"Mes lectures cl\xE9s"),s(),r(17,"p")(18,"em"),a(19,"Clean Code"),s(),a(20," et "),r(21,"em"),a(22,"Clean Architecture"),s(),a(23," (Robert C. Martin) m\u2019ont guid\xE9 vers les principes SOLID et les patterns de d\xE9couplage, transformant ma fa\xE7on d\u2019aborder le code. "),s(),r(24,"h3"),a(25,"Choisissez votre chapitre"),s(),r(26,"div",8)(27,"button",9),a(28," Principes SOLID "),s(),r(29,"button",10),a(30," Design Patterns "),s()()()()())},dependencies:[C,y,S,P,w,E,R],encapsulation:2,changeDetection:0});let e=t;return e})();var G=(e,t)=>[e,t];function Q(e,t){if(e&1&&(r(0,"span",14),a(1),s()),e&2){let i=d().$implicit;c(),T(" ",i.name," ")}}function J(e,t){if(e&1){let i=v();x(0),r(1,"div",11),_("click",function(){let o=g(i).$implicit,l=d();return f(l.select(o.id))}),r(2,"span",12),a(3),s(),u(4,Q,2,1,"span",13),s(),h()}if(e&2){let i=t.$implicit,n=d();c(),p("ngClass",k(3,G,n.selected===i.id?"px-8 py-3":"w-16 h-16",i.color)),c(2),D(i.id.toUpperCase()),c(),p("ngIf",n.selected===i.id)}}function K(e,t){if(e&1){let i=v();r(0,"div",15)(1,"button",16),_("click",function(){g(i);let o=d();return f(o.next())}),r(2,"mat-icon"),a(3,"arrow_forward"),s()()()}}function W(e,t){if(e&1&&M(0,"div",19),e&2){let i=d().$implicit;p("innerHTML",i.detail,I)}}function X(e,t){if(e&1&&(x(0),u(1,W,1,1,"div",18),h()),e&2){let i=t.$implicit,n=d(2);c(),p("ngIf",i.id===n.selected)}}function Y(e,t){if(e&1&&(r(0,"div",17),u(1,X,2,1,"ng-container",7),s()),e&2){let i=d();c(),p("ngForOf",i.principles)}}var H=(()=>{let t=class t{constructor(){this.selected=null,this.principles=[{id:"s",name:"Single Responsibility",color:"bg-red-500",detail:`
        <h4>Single Responsibility Principle</h4>
        <p>Chaque classe ne doit avoir qu\u2019une seule raison de changer. En isolant une responsabilit\xE9, on minimise les d\xE9pendances et on all\xE8ge la maintenance.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Une classe multi-t\xE2ches devient rapidement difficile \xE0 tester et \xE0 maintenir : chaque changement peut impacter plusieurs fonctionnalit\xE9s.</p>
        <p>\u{1F680} <strong>Exemple pratique</strong> : S\xE9parer la logique d\u2019envoi d\u2019email (EmailSender) de la logique de g\xE9n\xE9ration de contenu (ReportGenerator).</p>
        <p>\u{1F449} <strong>Impact</strong> : R\xE9duction de la dette technique et cycles de livraison plus rapides.</p>`},{id:"o",name:"Open/Closed",color:"bg-green-500",detail:`
        <h4>Open/Closed Principle</h4>
        <p>Les entit\xE9s logicielles (classes, modules, fonctions) doivent \xEAtre ouvertes \xE0 l\u2019extension mais ferm\xE9es \xE0 la modification.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Modifier du code existant introduit des risques de r\xE9gression sur les fonctionnalit\xE9s d\xE9j\xE0 test\xE9es.</p>
        <p>\u{1F6E0}\uFE0F <strong>Technique</strong> : Utiliser des interfaces et l\u2019injection de d\xE9pendances pour ajouter de nouveaux comportements.</p>
        <p>\u{1F680} <strong>Exemple pratique</strong> : Ajouter un nouveau mode de paiement (PayPalStrategy) sans toucher au paiement de base.</p>
        <p>\u{1F449} <strong>Impact</strong> : Meilleure \xE9volutivit\xE9 et stabilit\xE9 accrue.</p>`},{id:"l",name:"Liskov Substitution",color:"bg-blue-500",detail:`
        <h4>Liskov Substitution Principle</h4>
        <p>Une sous-classe doit pouvoir remplacer sa super-classe sans alt\xE9rer le comportement attendu par le client.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Si un objet d\xE9riv\xE9 ne respecte pas le contrat, les utilisateurs s\u2019en m\xE9fient et le code devient fragile.</p>
        <p>\u{1F4C8} <strong>Crit\xE8re</strong> : Pr\xE9conditions non renforc\xE9es, postconditions non affaiblies, invariants pr\xE9serv\xE9s.</p>
        <p>\u{1F680} <strong>Exemple pratique</strong> : Un <code>Rectangle</code> et un <code>Square</code> : le carr\xE9 ne doit pas modifier la logique de calcul de zone.</p>
        <p>\u{1F449} <strong>Impact</strong> : Fiabilit\xE9 des hi\xE9rarchies de classes et r\xE9utilisation sans surprise.</p>`},{id:"i",name:"Interface Segregation",color:"bg-yellow-500",detail:`
        <h4>Interface Segregation Principle</h4>
        <p>Pr\xE9f\xE9rer plusieurs interfaces sp\xE9cifiques plut\xF4t qu\u2019une interface g\xE9n\xE9rale surcharg\xE9e.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Un client forc\xE9 d\u2019impl\xE9menter des m\xE9thodes inutiles perd en clart\xE9 et flexibilit\xE9.</p>
        <p>\u{1F9E9} <strong>Technique</strong> : Cr\xE9er des interfaces d\xE9di\xE9es \xE0 chaque r\xF4le.</p>
        <p>\u{1F680} <strong>Exemple pratique</strong> : S\xE9parer <code>IPrinter</code> en <code>IPrintText</code> et <code>IPrintGraphics</code>.</p>
        <p>\u{1F449} <strong>Impact</strong> : Couplage r\xE9duit et code plus lisible.</p>`},{id:"d",name:"Dependency Inversion",color:"bg-purple-500",detail:`
        <h4>Dependency Inversion Principle</h4>
        <p>Les modules de haut niveau ne d\xE9pendent pas de modules de bas niveau : tous deux d\xE9pendent d\u2019abstractions.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> D\xE9pendre de classes concr\xE8tes rend le code rigide et difficile \xE0 tester.</p>
        <p>\u{1F6E0}\uFE0F <strong>Technique</strong> : Injection de d\xE9pendances via interfaces ou services injectables.</p>
        <p>\u{1F680} <strong>Exemple pratique</strong> : Passer un <code>IRepository</code> \xE0 la couche m\xE9tier au lieu d\u2019un <code>SqlRepository</code> concret.</p>
        <p>\u{1F449} <strong>Impact</strong> : Facilite le mock, les tests unitaires, et le remplacement de modules.</p>`}]}select(n){this.selected=n}next(){let n=this.principles.map(o=>o.id);if(!this.selected)this.selected=n[0];else{let o=n.indexOf(this.selected);this.selected=n[(o+1)%n.length]}}getColor(n){let o=this.principles.find(l=>l.id===n);return o?`${o.color} bg-opacity-75`:""}};t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=m({type:t,selectors:[["app-solid-principles"]],standalone:!0,features:[b],decls:15,vars:6,consts:[[1,"w-full","min-h-screen","bg-gray-50","flex","justify-center","items-start"],[1,"w-full","max-w-4xl","p-4"],["mat-icon-button","","routerLink","../","aria-label","Retour",1,"mb-2"],[1,"text-center","mb-6"],[1,"text-5xl","font-extrabold","mb-2"],[1,"text-lg","md:text-xl","text-gray-600"],[1,"flex","justify-center","space-x-6","mb-4"],[4,"ngFor","ngForOf"],[1,"relative","overflow-hidden","rounded-lg","transition-all","duration-500",3,"ngClass"],["class","absolute top-2 right-2 z-10",4,"ngIf"],["class","p-6 text-white prose prose-lg",4,"ngIf"],[1,"flex","items-center","justify-center","text-white","font-bold","rounded-full","cursor-pointer","transition-all","duration-300","hover:shadow-lg",3,"click","ngClass"],[1,"text-xl"],["class","ml-2 text-lg font-medium whitespace-nowrap",4,"ngIf"],[1,"ml-2","text-lg","font-medium","whitespace-nowrap"],[1,"absolute","top-2","right-2","z-10"],["mat-icon-button","","aria-label","Suivant",3,"click"],[1,"p-6","text-white","prose","prose-lg"],[3,"innerHTML",4,"ngIf"],[3,"innerHTML"]],template:function(o,l){o&1&&(r(0,"div",0)(1,"div",1)(2,"button",2)(3,"mat-icon"),a(4,"arrow_back"),s()(),r(5,"section",3)(6,"h1",4),a(7,"Principes SOLID"),s(),r(8,"p",5),a(9," Cinq principes essentiels pour \xE9crire un code maintenable, \xE9volutif et robuste. Cliquez sur un cercle ou sur \xAB Suivant \xBB pour d\xE9couvrir chaque principe. "),s()(),r(10,"section",6),u(11,J,5,6,"ng-container",7),s(),r(12,"section",8),u(13,K,4,0,"div",9)(14,Y,2,1,"div",10),s()()()),o&2&&(c(11),p("ngForOf",l.principles),c(),q("max-height",l.selected?"450px":"0"),p("ngClass",l.selected?l.getColor(l.selected):""),c(),p("ngIf",l.selected),c(),p("ngIf",l.selected))},dependencies:[C,F,L,j,y,S,P,w,E,O],encapsulation:2,changeDetection:0});let e=t;return e})();var Z=(e,t)=>[e,t];function ee(e,t){if(e&1&&(r(0,"span",14),a(1),s()),e&2){let i=d().$implicit;c(),D(i.id.charAt(0).toUpperCase())}}function te(e,t){if(e&1&&(r(0,"span",15),a(1),s()),e&2){let i=d().$implicit;c(),T(" ",i.name," ")}}function ne(e,t){if(e&1){let i=v();x(0),r(1,"div",11),_("click",function(){let o=g(i).$implicit,l=d();return f(l.select(o.id))}),u(2,ee,2,1,"span",12)(3,te,2,1,"span",13),s(),h()}if(e&2){let i=t.$implicit,n=d();c(),p("ngClass",k(3,Z,n.selected===i.id?"px-8 py-3":"w-16 h-16",i.color)),c(),p("ngIf",n.selected!==i.id),c(),p("ngIf",n.selected===i.id)}}function ie(e,t){if(e&1){let i=v();r(0,"div",16)(1,"button",17),_("click",function(){g(i);let o=d();return f(o.next())}),r(2,"mat-icon"),a(3,"arrow_forward"),s()()()}}function oe(e,t){if(e&1&&M(0,"div",20),e&2){let i=d().$implicit;p("innerHTML",i.detail,I)}}function re(e,t){if(e&1&&(x(0),u(1,oe,1,1,"div",19),h()),e&2){let i=t.$implicit,n=d(2);c(),p("ngIf",i.id===n.selected)}}function se(e,t){if(e&1&&(r(0,"div",18),u(1,re,2,1,"ng-container",7),s()),e&2){let i=d();c(),p("ngForOf",i.patterns)}}var N=(()=>{let t=class t{constructor(){this.selected=null,this.patterns=[{id:"singleton",name:"Singleton",color:"bg-red-500",detail:`
        <h4>Singleton Pattern</h4>
        <p>Garantit qu\u2019une classe n\u2019a qu\u2019une unique instance globale, accessible partout.  
        Utile pour les gestionnaires de config ou pools de connexions.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> R\xE9duit la consommation de ressources et simplifie l\u2019acc\xE8s aux services partag\xE9s.</p>
        <p>\u2699\uFE0F <strong>Impl\xE9mentation</strong> : cacher le constructeur et exposer une m\xE9thode <code>getInstance()</code>.</p>`},{id:"observer",name:"Observer",color:"bg-green-500",detail:`
        <h4>Observer Pattern</h4>
        <p>D\xE9finit une relation un-\xE0-plusieurs pour notifier automatiquement les abonn\xE9s lors d\u2019un changement d\u2019\xE9tat.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> D\xE9couple l\u2019\xE9metteur d\u2019\xE9v\xE9nements de ses r\xE9cepteurs, facilitant l\u2019extensibilit\xE9.</p>
        <p>\u2699\uFE0F <strong>Impl\xE9mentation</strong> : un sujet qui g\xE8re une liste d\u2019observateurs et appelle leur m\xE9thode <code>update()</code>.</p>`},{id:"adapter",name:"Adapter",color:"bg-blue-500",detail:`
        <h4>Adapter Pattern</h4>
        <p>Convertit l\u2019interface d\u2019une classe existante en une interface attendue par le client.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Permet d\u2019int\xE9grer des API tierces ou legacy sans modifier leur code.</p>
        <p>\u2699\uFE0F <strong>Impl\xE9mentation</strong> : cr\xE9er une classe adaptatrice qui impl\xE9mente l\u2019interface cible et d\xE9l\xE8gue aux m\xE9thodes de l\u2019adapt\xE9.</p>`},{id:"strategy",name:"Strategy",color:"bg-yellow-500",detail:`
        <h4>Strategy Pattern</h4>
        <p>Encapsule une famille d\u2019algorithmes derri\xE8re une interface commune, permettant de les substituer dynamiquement.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> \xC9vite les instructions conditionnelles dispers\xE9es et favorise l\u2019extensibilit\xE9.</p>
        <p>\u2699\uFE0F <strong>Impl\xE9mentation</strong> : d\xE9finir une interface <code>Strategy</code> et plusieurs impl\xE9mentations concr\xE8tes.</p>`},{id:"decorator",name:"Decorator",color:"bg-purple-500",detail:`
        <h4>Decorator Pattern</h4>
        <p>Ajoute dynamiquement des responsabilit\xE9s \xE0 un objet sans modifier sa classe de base.</p>
        <p>\u{1F50D} <strong>Pourquoi ?</strong> Offre plus de flexibilit\xE9 que l\u2019h\xE9ritage statique pour combiner des fonctionnalit\xE9s.</p>
        <p>\u2699\uFE0F <strong>Impl\xE9mentation</strong> : wrapper l\u2019objet original dans des objets d\xE9corateurs successifs.</p>`}]}select(n){this.selected=n}next(){let n=this.patterns.map(o=>o.id);if(!this.selected)this.selected=n[0];else{let o=n.indexOf(this.selected);this.selected=n[(o+1)%n.length]}}getColor(n){let o=this.patterns.find(l=>l.id===n);return o?`${o.color} bg-opacity-75`:""}};t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=m({type:t,selectors:[["app-design-patterns"]],standalone:!0,features:[b],decls:15,vars:6,consts:[[1,"w-full","min-h-screen","bg-gray-50","flex","justify-center","items-start"],[1,"w-full","max-w-4xl","p-4"],["mat-icon-button","","routerLink","../","aria-label","Retour",1,"mb-2"],[1,"text-center","mb-6"],[1,"text-5xl","font-extrabold","mb-2"],[1,"text-lg","md:text-xl","text-gray-600"],[1,"flex","justify-center","space-x-6","mb-4"],[4,"ngFor","ngForOf"],[1,"relative","overflow-hidden","rounded-lg","transition-all","duration-500",3,"ngClass"],["class","absolute top-2 right-2 z-10",4,"ngIf"],["class","p-6 text-white prose prose-lg",4,"ngIf"],[1,"flex","items-center","justify-center","text-white","font-bold","rounded-full","cursor-pointer","transition-all","duration-300","hover:shadow-lg",3,"click","ngClass"],["class","text-xl",4,"ngIf"],["class","ml-2 text-lg font-medium whitespace-nowrap",4,"ngIf"],[1,"text-xl"],[1,"ml-2","text-lg","font-medium","whitespace-nowrap"],[1,"absolute","top-2","right-2","z-10"],["mat-icon-button","","aria-label","Suivant",3,"click"],[1,"p-6","text-white","prose","prose-lg"],[3,"innerHTML",4,"ngIf"],[3,"innerHTML"]],template:function(o,l){o&1&&(r(0,"div",0)(1,"div",1)(2,"button",2)(3,"mat-icon"),a(4,"arrow_back"),s()(),r(5,"section",3)(6,"h1",4),a(7,"Design Patterns"),s(),r(8,"p",5),a(9," Cinq patrons incontournables pour organiser et r\xE9utiliser votre code. Cliquez sur un cercle ou sur \xAB Suivant \xBB pour explorer chacun. "),s()(),r(10,"section",6),u(11,ne,4,6,"ng-container",7),s(),r(12,"section",8),u(13,ie,4,0,"div",9)(14,se,2,1,"div",10),s()()()),o&2&&(c(11),p("ngForOf",l.patterns),c(),q("max-height",l.selected?"450px":"0"),p("ngClass",l.selected?l.getColor(l.selected):""),c(),p("ngIf",l.selected),c(),p("ngIf",l.selected))},dependencies:[C,F,L,j,y,S,P,w,E,O],encapsulation:2,changeDetection:0});let e=t;return e})();var qe=[{path:"",component:z},{path:"solid",component:H},{path:"design-patterns",component:N},{path:"**",redirectTo:""}];export{qe as default};
